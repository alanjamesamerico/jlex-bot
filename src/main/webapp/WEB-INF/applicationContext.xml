<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
<!--# COMPONENT SCAN #-->
	<context:component-scan base-package="br.com.jlex.bot.services" />
<!-- 	<context:component-scan base-package="com.company.scheduling"/> Quartz via anotaç~´ao-->
	
<!--# ANNOTATION #-->
	<context:annotation-config/>
	<mvc:annotation-driven />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" /> <!-- /WEB-INF/views/ -->
		<property name="suffix" value=".jsp" />
	</bean>
	<bean id="multipartResolver"
  		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="250000"/>
	</bean>
	<mvc:view-controller path="/" view-name="index"/>

<!--# QUARTZ SCHEDULER #-->
    <bean id="quartzTest"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="jlexService"/>
        <property name="targetMethod" value="initGetMessagesSenders"/>
        <property name="concurrent" value="false" />
	</bean>
	<bean id="triggerTest" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="quartzTest"/>
        <property name="startDelay" value="10000"/>
        <property name="repeatInterval" value="90000"/>
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">      
        <property name="quartzProperties">
        	<props>
        		<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
	        	<prop key="org.quartz.threadPool.threadCount">1</prop>
	        </props>
        </property>
        <property name="triggers">
            <list>
                <ref bean="triggerTest"/> 
            </list>
        </property>
        <property name="waitForJobsToCompleteOnShutdown" value="true" />
    </bean>
    
    <!--  
	<bean name="complexJobDetail"    class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
	    <property name="jobClass" value="br.com.jlex.bot.services.JLexService" />
	    <property name="jobDataMap">
	        <map>
	            <entry key="telegramApi" value-ref="jlexService" />
	        </map>
	    </property>
	    <property name="durability" value="true" />
	</bean>
	<bean id="cronTrigger"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	    <property name="jobDetail" ref="complexJobDetail" />
	    <property name="cronExpression" value="0/9 * * * * ?" />
	</bean>
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">      
        <property name="triggers">
            <list>
                <ref bean="cronTrigger"/>
            </list>
        </property>
        <property name="quartzProperties">
        	<props>
        		<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
	        	<prop key="org.quartz.threadPool.threadCount">1</prop>
	        </props>
        </property>
    </bean> -->
	
	
<!--# DATASOURCE - Connection with data base #
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:database.properties</value>
		</property>
	</bean>
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${pg.driver}" />
		<property name="url" value="${pg.url}" />
		<property name="username" value="${pg.username}" />
		<property name="password" value="${pg.password}" />
	</bean>-->
	
<!--# SESSION FACTORY - Configuration for Hibernate #
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="br.com.lab.app.model" />
		<property name="annotatedPackages" value="br.com.lab.app.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
 				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>-->
	
	
<!--# TRANSACTION MANAGER #
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>-->
</beans>